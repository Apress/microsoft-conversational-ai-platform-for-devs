/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/workbooksMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Workbooks. */
var Workbooks = /** @class */ (function () {
    /**
     * Create a Workbooks.
     * @param {ApplicationInsightsManagementClientContext} client Reference to the service client.
     */
    function Workbooks(client) {
        this.client = client;
    }
    Workbooks.prototype.listByResourceGroup = function (resourceGroupName, category, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            category: category,
            options: options
        }, listByResourceGroupOperationSpec, callback);
    };
    Workbooks.prototype.get = function (resourceGroupName, resourceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            options: options
        }, getOperationSpec, callback);
    };
    Workbooks.prototype.deleteMethod = function (resourceGroupName, resourceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    Workbooks.prototype.createOrUpdate = function (resourceGroupName, resourceName, workbookProperties, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            workbookProperties: workbookProperties,
            options: options
        }, createOrUpdateOperationSpec, callback);
    };
    Workbooks.prototype.update = function (resourceGroupName, resourceName, workbookProperties, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            workbookProperties: workbookProperties,
            options: options
        }, updateOperationSpec, callback);
    };
    return Workbooks;
}());
export { Workbooks };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.category,
        Parameters.tags,
        Parameters.canFetchContent,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.WorkbooksListResult
        },
        default: {
            bodyMapper: Mappers.WorkbookError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Workbook
        },
        default: {
            bodyMapper: Mappers.WorkbookError
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        201: {},
        204: {},
        default: {
            bodyMapper: Mappers.WorkbookError
        }
    },
    serializer: serializer
};
var createOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "workbookProperties",
        mapper: tslib_1.__assign({}, Mappers.Workbook, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Workbook
        },
        201: {
            bodyMapper: Mappers.Workbook
        },
        default: {
            bodyMapper: Mappers.WorkbookError
        }
    },
    serializer: serializer
};
var updateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/microsoft.insights/workbooks/{resourceName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "workbookProperties",
        mapper: tslib_1.__assign({}, Mappers.Workbook, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Workbook
        },
        default: {
            bodyMapper: Mappers.WorkbookError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=workbooks.js.map