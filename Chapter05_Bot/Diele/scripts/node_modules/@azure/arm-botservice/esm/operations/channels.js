/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/channelsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Channels. */
var Channels = /** @class */ (function () {
    /**
     * Create a Channels.
     * @param {AzureBotServiceContext} client Reference to the service client.
     */
    function Channels(client) {
        this.client = client;
    }
    Channels.prototype.create = function (resourceGroupName, resourceName, channelName, parameters, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            channelName: channelName,
            parameters: parameters,
            options: options
        }, createOperationSpec, callback);
    };
    Channels.prototype.update = function (resourceGroupName, resourceName, channelName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            channelName: channelName,
            options: options
        }, updateOperationSpec, callback);
    };
    Channels.prototype.deleteMethod = function (resourceGroupName, resourceName, channelName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            channelName: channelName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    Channels.prototype.get = function (resourceGroupName, resourceName, channelName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            channelName: channelName,
            options: options
        }, getOperationSpec, callback);
    };
    Channels.prototype.listWithKeys = function (resourceGroupName, resourceName, channelName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            channelName: channelName,
            options: options
        }, listWithKeysOperationSpec, callback);
    };
    Channels.prototype.listByResourceGroup = function (resourceGroupName, resourceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceName: resourceName,
            options: options
        }, listByResourceGroupOperationSpec, callback);
    };
    Channels.prototype.listByResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByResourceGroupNextOperationSpec, callback);
    };
    return Channels;
}());
export { Channels };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var createOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.channelName0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: tslib_1.__assign({}, Mappers.BotChannel, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.BotChannel
        },
        201: {
            bodyMapper: Mappers.BotChannel
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var updateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.channelName0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: {
            location: [
                "options",
                "location"
            ],
            tags: [
                "options",
                "tags"
            ],
            sku: [
                "options",
                "sku"
            ],
            kind: [
                "options",
                "kind"
            ],
            etag: [
                "options",
                "etag"
            ],
            properties: [
                "options",
                "properties"
            ]
        },
        mapper: tslib_1.__assign({}, Mappers.BotChannel, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.BotChannel
        },
        201: {
            bodyMapper: Mappers.BotChannel
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.channelName1,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.channelName1,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.BotChannel
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var listWithKeysOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.channelName0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.BotChannel
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var listByResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.resourceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ChannelResponseList
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
var listByResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ChannelResponseList
        },
        default: {
            bodyMapper: Mappers.ErrorModel
        }
    },
    serializer: serializer
};
//# sourceMappingURL=channels.js.map