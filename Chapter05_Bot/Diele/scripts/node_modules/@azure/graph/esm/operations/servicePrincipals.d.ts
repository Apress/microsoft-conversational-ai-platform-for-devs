import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { GraphRbacManagementClientContext } from "../graphRbacManagementClientContext";
/** Class representing a ServicePrincipals. */
export declare class ServicePrincipals {
    private readonly client;
    /**
     * Create a ServicePrincipals.
     * @param {GraphRbacManagementClientContext} client Reference to the service client.
     */
    constructor(client: GraphRbacManagementClientContext);
    /**
     * Creates a service principal in the directory.
     * @param parameters Parameters to create a service principal.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsCreateResponse>
     */
    create(parameters: Models.ServicePrincipalCreateParameters, options?: msRest.RequestOptionsBase): Promise<Models.ServicePrincipalsCreateResponse>;
    /**
     * @param parameters Parameters to create a service principal.
     * @param callback The callback
     */
    create(parameters: Models.ServicePrincipalCreateParameters, callback: msRest.ServiceCallback<Models.ServicePrincipal>): void;
    /**
     * @param parameters Parameters to create a service principal.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(parameters: Models.ServicePrincipalCreateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServicePrincipal>): void;
    /**
     * Gets a list of service principals from the current tenant.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsListResponse>
     */
    list(options?: Models.ServicePrincipalsListOptionalParams): Promise<Models.ServicePrincipalsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.ServicePrincipalListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: Models.ServicePrincipalsListOptionalParams, callback: msRest.ServiceCallback<Models.ServicePrincipalListResult>): void;
    /**
     * Updates a service principal in the directory.
     * @param objectId The object ID of the service principal to delete.
     * @param parameters Parameters to update a service principal.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    update(objectId: string, parameters: Models.ServicePrincipalUpdateParameters, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param objectId The object ID of the service principal to delete.
     * @param parameters Parameters to update a service principal.
     * @param callback The callback
     */
    update(objectId: string, parameters: Models.ServicePrincipalUpdateParameters, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param objectId The object ID of the service principal to delete.
     * @param parameters Parameters to update a service principal.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(objectId: string, parameters: Models.ServicePrincipalUpdateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Deletes a service principal from the directory.
     * @param objectId The object ID of the service principal to delete.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(objectId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param objectId The object ID of the service principal to delete.
     * @param callback The callback
     */
    deleteMethod(objectId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param objectId The object ID of the service principal to delete.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(objectId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets service principal information from the directory. Query by objectId or pass a filter to
     * query by appId
     * @param objectId The object ID of the service principal to get.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsGetResponse>
     */
    get(objectId: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicePrincipalsGetResponse>;
    /**
     * @param objectId The object ID of the service principal to get.
     * @param callback The callback
     */
    get(objectId: string, callback: msRest.ServiceCallback<Models.ServicePrincipal>): void;
    /**
     * @param objectId The object ID of the service principal to get.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(objectId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServicePrincipal>): void;
    /**
     * The owners are a set of non-admin users who are allowed to modify this object.
     * @summary Directory objects that are owners of this service principal.
     * @param objectId The object ID of the service principal for which to get owners.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsListOwnersResponse>
     */
    listOwners(objectId: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicePrincipalsListOwnersResponse>;
    /**
     * @param objectId The object ID of the service principal for which to get owners.
     * @param callback The callback
     */
    listOwners(objectId: string, callback: msRest.ServiceCallback<Models.DirectoryObjectListResult>): void;
    /**
     * @param objectId The object ID of the service principal for which to get owners.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOwners(objectId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DirectoryObjectListResult>): void;
    /**
     * Get the keyCredentials associated with the specified service principal.
     * @param objectId The object ID of the service principal for which to get keyCredentials.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsListKeyCredentialsResponse>
     */
    listKeyCredentials(objectId: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicePrincipalsListKeyCredentialsResponse>;
    /**
     * @param objectId The object ID of the service principal for which to get keyCredentials.
     * @param callback The callback
     */
    listKeyCredentials(objectId: string, callback: msRest.ServiceCallback<Models.KeyCredentialListResult>): void;
    /**
     * @param objectId The object ID of the service principal for which to get keyCredentials.
     * @param options The optional parameters
     * @param callback The callback
     */
    listKeyCredentials(objectId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KeyCredentialListResult>): void;
    /**
     * Update the keyCredentials associated with a service principal.
     * @param objectId The object ID for which to get service principal information.
     * @param value A collection of KeyCredentials.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    updateKeyCredentials(objectId: string, value: Models.KeyCredential[], options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param objectId The object ID for which to get service principal information.
     * @param value A collection of KeyCredentials.
     * @param callback The callback
     */
    updateKeyCredentials(objectId: string, value: Models.KeyCredential[], callback: msRest.ServiceCallback<void>): void;
    /**
     * @param objectId The object ID for which to get service principal information.
     * @param value A collection of KeyCredentials.
     * @param options The optional parameters
     * @param callback The callback
     */
    updateKeyCredentials(objectId: string, value: Models.KeyCredential[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the passwordCredentials associated with a service principal.
     * @param objectId The object ID of the service principal.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsListPasswordCredentialsResponse>
     */
    listPasswordCredentials(objectId: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicePrincipalsListPasswordCredentialsResponse>;
    /**
     * @param objectId The object ID of the service principal.
     * @param callback The callback
     */
    listPasswordCredentials(objectId: string, callback: msRest.ServiceCallback<Models.PasswordCredentialListResult>): void;
    /**
     * @param objectId The object ID of the service principal.
     * @param options The optional parameters
     * @param callback The callback
     */
    listPasswordCredentials(objectId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PasswordCredentialListResult>): void;
    /**
     * Updates the passwordCredentials associated with a service principal.
     * @param objectId The object ID of the service principal.
     * @param value A collection of PasswordCredentials.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    updatePasswordCredentials(objectId: string, value: Models.PasswordCredential[], options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param objectId The object ID of the service principal.
     * @param value A collection of PasswordCredentials.
     * @param callback The callback
     */
    updatePasswordCredentials(objectId: string, value: Models.PasswordCredential[], callback: msRest.ServiceCallback<void>): void;
    /**
     * @param objectId The object ID of the service principal.
     * @param value A collection of PasswordCredentials.
     * @param options The optional parameters
     * @param callback The callback
     */
    updatePasswordCredentials(objectId: string, value: Models.PasswordCredential[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets a list of service principals from the current tenant.
     * @param nextLink Next link for the list operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsListNextResponse>
     */
    listNext(nextLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicePrincipalsListNextResponse>;
    /**
     * @param nextLink Next link for the list operation.
     * @param callback The callback
     */
    listNext(nextLink: string, callback: msRest.ServiceCallback<Models.ServicePrincipalListResult>): void;
    /**
     * @param nextLink Next link for the list operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServicePrincipalListResult>): void;
    /**
     * The owners are a set of non-admin users who are allowed to modify this object.
     * @summary Directory objects that are owners of this service principal.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicePrincipalsListOwnersNextResponse>
     */
    listOwnersNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicePrincipalsListOwnersNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listOwnersNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DirectoryObjectListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOwnersNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DirectoryObjectListResult>): void;
}
//# sourceMappingURL=servicePrincipals.d.ts.map