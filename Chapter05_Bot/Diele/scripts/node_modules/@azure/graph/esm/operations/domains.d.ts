import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { GraphRbacManagementClientContext } from "../graphRbacManagementClientContext";
/** Class representing a Domains. */
export declare class Domains {
    private readonly client;
    /**
     * Create a Domains.
     * @param {GraphRbacManagementClientContext} client Reference to the service client.
     */
    constructor(client: GraphRbacManagementClientContext);
    /**
     * Gets a list of domains for the current tenant.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListResponse>
     */
    list(options?: Models.DomainsListOptionalParams): Promise<Models.DomainsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.DomainListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: Models.DomainsListOptionalParams, callback: msRest.ServiceCallback<Models.DomainListResult>): void;
    /**
     * Gets a specific domain in the current tenant.
     * @param domainName name of the domain.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsGetResponse>
     */
    get(domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsGetResponse>;
    /**
     * @param domainName name of the domain.
     * @param callback The callback
     */
    get(domainName: string, callback: msRest.ServiceCallback<Models.Domain>): void;
    /**
     * @param domainName name of the domain.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Domain>): void;
}
//# sourceMappingURL=domains.d.ts.map